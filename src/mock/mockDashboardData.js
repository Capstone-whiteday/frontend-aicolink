// üü° ÎåÄÏãúÎ≥¥Îìú ÌÖåÏä§Ìä∏Ïö© Î™© Îç∞Ïù¥ÌÑ∞ (24ÏãúÍ∞Ñ Í∏∞Ï§Ä)
// üü¢ Î™®Îì† Í∞íÏùÑ 0, actionÏùÄ 'IDLE'Î°ú Í≥†Ï†ï
export const mockScheduleList = Array(24).fill(null).map((_, i) => ({
  hour: i,
  action: 'IDLE',              // üü¢ Ìï≠ÏÉÅ IDLE
  powerKw: 0,                  // üü¢ Ìï≠ÏÉÅ 0
  predictSolar: 0,             // üü¢ Ìï≠ÏÉÅ 0
  powerPayment: 0,             // üü¢ Ìï≠ÏÉÅ 0
}));

export const mockScheduleResponse = {
  stationId: 0,
  scheduleList: mockScheduleList,
  totalCost: 0,                // üü¢ Ìï≠ÏÉÅ 0
  savingCost: 0,               // üü¢ Ìï≠ÏÉÅ 0
  // "totalSolar": 0
};

// // üü° ÎåÄÏãúÎ≥¥Îìú ÌÖåÏä§Ìä∏Ïö© Î™© Îç∞Ïù¥ÌÑ∞ (24ÏãúÍ∞Ñ Í∏∞Ï§Ä)
// export const mockScheduleList = Array(24).fill(null).map((_, i) => ({
//   hour: i,
//   action: i % 3 === 0 ? 'CHARGE' : i % 3 === 1 ? 'DISCHARGE' : 'IDLE',
//   powerKw: Math.floor(Math.random() * 50) + 10, // 10~59 kWh
//   predictSolar: Math.floor(Math.random() * 20), // 0~19 kWh
//   powerPayment: Math.floor(Math.random() * 200) + 50, // 50~249 Ïõê
// }));

// export const mockScheduleResponse = {
//   stationId: 0,
//   scheduleList: mockScheduleList,
//    totalCost: 0.1,
//   savingCost: 0.1,
//   // "totalSolar": 0.1
// };